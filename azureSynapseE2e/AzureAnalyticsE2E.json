{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.8.9.13224",
      "templateHash": "11573322489495583562"
    }
  },
  "parameters": {
    "networkIsolationMode": {
      "type": "string",
      "defaultValue": "default",
      "metadata": {
        "description": "Network Isolation Mode"
      },
      "allowedValues": [
        "default",
        "vNet"
      ]
    },
    "resourceLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Resource Location"
      }
    },
    "uniqueSuffix": {
      "type": "string",
      "defaultValue": "[substring(uniqueString(resourceGroup().id), 0, 6)]",
      "metadata": {
        "description": "Unique Suffix"
      }
    },
    "ctrlDeployPurview": {
      "type": "bool",
      "defaultValue": true
    },
    "ctrlDeployAI": {
      "type": "bool",
      "defaultValue": true
    },
    "ctrlDeployStreaming": {
      "type": "bool",
      "defaultValue": true
    },
    "ctrlDeployDataShare": {
      "type": "bool",
      "defaultValue": true
    },
    "ctrlDeployPrivateDNSZones": {
      "type": "bool",
      "defaultValue": true
    },
    "ctrlDeployOperationalDB": {
      "type": "bool",
      "defaultValue": false
    },
    "ctrlDeployCosmosDB": {
      "type": "bool",
      "defaultValue": false
    },
    "ctrlDeploySampleArtifacts": {
      "type": "bool",
      "defaultValue": false
    },
    "sampleArtifactCollectionName": {
      "type": "string",
      "defaultValue": "OpenDatasets",
      "allowedValues": [
        "OpenDatasets"
      ]
    },
    "ctrlNewOrExistingVNet": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ]
    },
    "ctrlStreamIngestionService": {
      "type": "string",
      "defaultValue": "eventhub",
      "allowedValues": [
        "eventhub",
        "iothub"
      ]
    },
    "deploymentDatetime": {
      "type": "string",
      "defaultValue": "[utcNow()]"
    },
    "existingVNetResourceGroupName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]"
    },
    "vNetName": {
      "type": "string",
      "defaultValue": "[format('azvnet{0}', parameters('uniqueSuffix'))]",
      "metadata": {
        "description": "Virtual Network Name"
      }
    },
    "vNetIPAddressPrefixes": {
      "type": "array",
      "defaultValue": [
        "10.1.0.0/16"
      ],
      "metadata": {
        "description": "Virtual Network IP Address Space"
      }
    },
    "vNetSubnetName": {
      "type": "string",
      "defaultValue": "default",
      "metadata": {
        "description": "Virtual Network Subnet Name"
      }
    },
    "vNetSubnetIPAddressPrefix": {
      "type": "string",
      "defaultValue": "10.1.0.0/24",
      "metadata": {
        "description": "Virtual Network Subnet Name"
      }
    },
    "workspaceDataLakeAccountName": {
      "type": "string",
      "defaultValue": "[format('azwksdatalake{0}', parameters('uniqueSuffix'))]",
      "metadata": {
        "description": "Synapse Workspace Data Lake Storage Account Name"
      }
    },
    "rawDataLakeAccountName": {
      "type": "string",
      "defaultValue": "[format('azrawdatalake{0}', parameters('uniqueSuffix'))]",
      "metadata": {
        "description": "Synapse Workspace Data Lake Storage Account Name"
      }
    },
    "curatedDataLakeAccountName": {
      "type": "string",
      "defaultValue": "[format('azcurateddatalake{0}', parameters('uniqueSuffix'))]",
      "metadata": {
        "description": "Synapse Workspace Data Lake Storage Account Name"
      }
    },
    "dataLakeRawZoneName": {
      "type": "string",
      "defaultValue": "raw",
      "metadata": {
        "description": "Data Lake Raw Zone Container Name"
      }
    },
    "dataLakeTrustedZoneName": {
      "type": "string",
      "defaultValue": "trusted",
      "metadata": {
        "description": "Data Lake Trusted Zone Container Name"
      }
    },
    "dataLakeCuratedZoneName": {
      "type": "string",
      "defaultValue": "curated",
      "metadata": {
        "description": "Data Lake Curated Zone Container Name"
      }
    },
    "dataLakeTransientZoneName": {
      "type": "string",
      "defaultValue": "transient",
      "metadata": {
        "description": "Data Lake Transient Zone Container Name"
      }
    },
    "dataLakeSandpitZoneName": {
      "type": "string",
      "defaultValue": "sandpit",
      "metadata": {
        "description": "Data Lake Sandpit Zone Container Name"
      }
    },
    "synapseDefaultContainerName": {
      "type": "string",
      "defaultValue": "[parameters('synapseWorkspaceName')]",
      "metadata": {
        "description": "Synapse Default Container Name"
      }
    },
    "synapseWorkspaceName": {
      "type": "string",
      "defaultValue": "[format('azsynapsewks{0}', parameters('uniqueSuffix'))]",
      "metadata": {
        "description": "Synapse Workspace Name"
      }
    },
    "synapseSqlAdminUserName": {
      "type": "string",
      "defaultValue": "azsynapseadmin",
      "metadata": {
        "description": "SQL Admin User Name"
      }
    },
    "synapseSqlAdminPassword": {
      "type": "string",
      "metadata": {
        "description": "SQL Admin User Password"
      }
    },
    "synapseManagedRGName": {
      "type": "string",
      "defaultValue": "[format('{0}-mrg', parameters('synapseWorkspaceName'))]",
      "metadata": {
        "description": "Synapse Managed Resource Group Name"
      }
    },
    "ctrlDeploySynapseSQLPool": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Deploy SQL Pool"
      }
    },
    "synapseDedicatedSQLPoolName": {
      "type": "string",
      "defaultValue": "EnterpriseDW",
      "metadata": {
        "description": "SQL Pool Name"
      }
    },
    "synapseSQLPoolSKU": {
      "type": "string",
      "defaultValue": "DW100c",
      "metadata": {
        "description": "SQL Pool SKU"
      }
    },
    "ctrlDeploySynapseSparkPool": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Deploy Spark Pool"
      }
    },
    "synapseSparkPoolName": {
      "type": "string",
      "defaultValue": "SparkPool",
      "metadata": {
        "description": "Spark Pool Name"
      }
    },
    "synapseSparkPoolNodeSize": {
      "type": "string",
      "defaultValue": "Small",
      "metadata": {
        "description": "Spark Node Size"
      }
    },
    "synapseSparkPoolMinNodeCount": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "Spark Min Node Count"
      }
    },
    "synapseSparkPoolMaxNodeCount": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "Spark Max Node Count"
      }
    },
    "ctrlDeploySynapseADXPool": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Deploy ADX Pool"
      }
    },
    "synapseADXPoolName": {
      "type": "string",
      "defaultValue": "[format('adxpool{0}', parameters('uniqueSuffix'))]",
      "metadata": {
        "description": "ADX Pool Name"
      }
    },
    "synapseADXDatabaseName": {
      "type": "string",
      "defaultValue": "ADXDB",
      "metadata": {
        "description": "ADX Database Name"
      }
    },
    "synapseADXPoolEnableAutoScale": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "ADX Pool Enable Auto-Scale"
      }
    },
    "synapseADXPoolMinSize": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "ADX Pool Minimum Size"
      }
    },
    "synapseADXPoolMaxSize": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "ADX Pool Maximum Size"
      }
    },
    "synapsePrivateLinkHubName": {
      "type": "string",
      "defaultValue": "[format('azsynapsehub{0}', parameters('uniqueSuffix'))]",
      "metadata": {
        "description": "Synapse Private Link Hub Name"
      }
    },
    "purviewAccountName": {
      "type": "string",
      "defaultValue": "[format('azpurview{0}', parameters('uniqueSuffix'))]",
      "metadata": {
        "description": "Purview Account Name"
      }
    },
    "purviewManagedRGName": {
      "type": "string",
      "defaultValue": "[format('{0}-mrg', parameters('purviewAccountName'))]",
      "metadata": {
        "description": "Purview Managed Resource Group Name"
      }
    },
    "keyVaultName": {
      "type": "string",
      "defaultValue": "[format('azkeyvault{0}', parameters('uniqueSuffix'))]",
      "metadata": {
        "description": "Data Lake Storage Account Name"
      }
    },
    "azureMLWorkspaceName": {
      "type": "string",
      "defaultValue": "[format('azmlwks{0}', parameters('uniqueSuffix'))]",
      "metadata": {
        "description": "Azure Machine Learning Workspace Name"
      }
    },
    "azureMLStorageAccountName": {
      "type": "string",
      "defaultValue": "[format('azmlstorage{0}', parameters('uniqueSuffix'))]",
      "metadata": {
        "description": "Azure Machine Learning Storage Account Name"
      }
    },
    "azureMLAppInsightsName": {
      "type": "string",
      "defaultValue": "[format('azmlappinsights{0}', parameters('uniqueSuffix'))]",
      "metadata": {
        "description": "Azure Machine Learning Application Insights Name"
      }
    },
    "azureMLContainerRegistryName": {
      "type": "string",
      "defaultValue": "[format('azmlcontainerreg{0}', parameters('uniqueSuffix'))]",
      "metadata": {
        "description": "Azure Machine Learning Container Registry Name"
      }
    },
    "dataShareAccountName": {
      "type": "string",
      "defaultValue": "[format('azdatashare{0}', parameters('uniqueSuffix'))]",
      "metadata": {
        "description": "Azure Data Share Name"
      }
    },
    "textAnalyticsAccountName": {
      "type": "string",
      "defaultValue": "[format('aztextanalytics{0}', parameters('uniqueSuffix'))]",
      "metadata": {
        "description": "Azure Cognitive Services Account Name"
      }
    },
    "anomalyDetectorName": {
      "type": "string",
      "defaultValue": "[format('azanomalydetector{0}', parameters('uniqueSuffix'))]",
      "metadata": {
        "description": "Azure Anomaly Detector Account Name"
      }
    },
    "eventHubNamespaceName": {
      "type": "string",
      "defaultValue": "[format('azeventhubns{0}', parameters('uniqueSuffix'))]",
      "metadata": {
        "description": "Azure EventHub Namespace Name"
      }
    },
    "eventHubName": {
      "type": "string",
      "defaultValue": "[format('azeventhub{0}', parameters('uniqueSuffix'))]",
      "metadata": {
        "description": "Azure EventHub Name"
      }
    },
    "eventHubSku": {
      "type": "string",
      "defaultValue": "Standard",
      "metadata": {
        "description": "Azure EventHub SKU"
      }
    },
    "eventHubPartitionCount": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "Azure EventHub Partition Count"
      }
    },
    "iotHubName": {
      "type": "string",
      "defaultValue": "[format('aziothub{0}', parameters('uniqueSuffix'))]",
      "metadata": {
        "description": "Azure IoTHub Name"
      }
    },
    "iotHubSku": {
      "type": "string",
      "defaultValue": "F1",
      "metadata": {
        "description": "Azure IoTHub SKU"
      }
    },
    "streamAnalyticsJobName": {
      "type": "string",
      "defaultValue": "[format('azstreamjob{0}', parameters('uniqueSuffix'))]",
      "metadata": {
        "description": "Azure Stream Analytics Job Name"
      }
    },
    "streamAnalyticsJobSku": {
      "type": "string",
      "defaultValue": "Standard",
      "metadata": {
        "description": "Azure Stream Analytics Job Name"
      }
    },
    "cosmosDBAccountName": {
      "type": "string",
      "defaultValue": "[format('azcosmosdb{0}', parameters('uniqueSuffix'))]",
      "metadata": {
        "description": "CosmosDB Account Name"
      }
    },
    "cosmosDBDatabaseName": {
      "type": "string",
      "defaultValue": "OperationalDB",
      "metadata": {
        "description": "CosmosDB Database Name"
      }
    }
  },
  "variables": {
    "deploymentScriptUAMIName": "[toLower(format('{0}-uami', resourceGroup().name))]",
    "rawDataLakeZoneContainerNames": [
      "[parameters('dataLakeTransientZoneName')]",
      "[parameters('dataLakeRawZoneName')]"
    ],
    "curatedDataLakeZoneContainerNames": [
      "[parameters('dataLakeTrustedZoneName')]",
      "[parameters('dataLakeCuratedZoneName')]"
    ],
    "synapsePSScriptLocation": "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0F6dXJlL2F6dXJlLXN5bmFwc2UtYW5hbHl0aWNzLWVuZDJlbmQvbWFpbi9EZXBsb3kvc2NyaXB0cy9TeW5hcHNlUG9zdERlcGxveS5wczE=",
    "azMLWorkspaceName": "[if(parameters('ctrlDeployAI'), format('-AzMLWorkspaceName {0}', parameters('azureMLWorkspaceName')), '')]",
    "sampleArtifactsParams": "[if(parameters('ctrlDeploySampleArtifacts'), format('-CtrlDeploySampleArtifacts $True -SampleArtifactCollectioName {0}', parameters('sampleArtifactCollectionName')), '')]",
    "purviewPSScriptLocation": "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0F6dXJlL2F6dXJlLXN5bmFwc2UtYW5hbHl0aWNzLWVuZDJlbmQvbWFpbi9EZXBsb3kvc2NyaXB0cy9QdXJ2aWV3UG9zdERlcGxveS5wczE=",
    "datalakeAccountPurviewParams": "[format('-WorkspaceDataLakeAccountName {0} -RawDataLakeAccountName {1} -CuratedDataLakeAccountName {2}', parameters('workspaceDataLakeAccountName'), parameters('rawDataLakeAccountName'), parameters('curatedDataLakeAccountName'))]",
    "cleanUpPSScriptLocation": "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0F6dXJlL2F6dXJlLXN5bmFwc2UtYW5hbHl0aWNzLWVuZDJlbmQvbWFpbi9EZXBsb3kvc2NyaXB0cy9DbGVhblVwUG9zdERlcGxveS5wczE=",
    "cleanUpScriptArguments": "[format('-UAMIResourceID {0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('deploymentScriptUAMIName')))]"
  },
  "resources": [

    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "SynapseDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "networkIsolationMode": {
            "value": "[parameters('networkIsolationMode')]"
          },
          "resourceLocation": {
            "value": "[parameters('resourceLocation')]"
          },
          "ctrlDeploySynapseSQLPool": {
            "value": "[parameters('ctrlDeploySynapseSQLPool')]"
          },
          "ctrlDeploySynapseSparkPool": {
            "value": "[parameters('ctrlDeploySynapseSparkPool')]"
          },
          "ctrlDeploySynapseADXPool": {
            "value": "[parameters('ctrlDeploySynapseADXPool')]"
          },
          "workspaceDataLakeAccountName": {
            "value": "[parameters('workspaceDataLakeAccountName')]"
          },
          "dataLakeSandpitZoneName": {
            "value": "[parameters('dataLakeSandpitZoneName')]"
          },
          "synapseDefaultContainerName": {
            "value": "[parameters('synapseDefaultContainerName')]"
          },

          "synapseDedicatedSQLPoolName": {
            "value": "[parameters('synapseDedicatedSQLPoolName')]"
          },
          "synapseManagedRGName": {
            "value": "[parameters('synapseManagedRGName')]"
          },
          "synapseSparkPoolMaxNodeCount": {
            "value": "[parameters('synapseSparkPoolMaxNodeCount')]"
          },
          "synapseSparkPoolMinNodeCount": {
            "value": "[parameters('synapseSparkPoolMinNodeCount')]"
          },
          "synapseSparkPoolName": {
            "value": "[parameters('synapseSparkPoolName')]"
          },
          "synapseSparkPoolNodeSize": {
            "value": "[parameters('synapseSparkPoolNodeSize')]"
          },
          "synapseADXPoolName": {
            "value": "[parameters('synapseADXPoolName')]"
          },
          "synapseADXDatabaseName": {
            "value": "[parameters('synapseADXDatabaseName')]"
          },
          "synapseADXPoolMinSize": {
            "value": "[parameters('synapseADXPoolMinSize')]"
          },
          "synapseADXPoolMaxSize": {
            "value": "[parameters('synapseADXPoolMaxSize')]"
          },
          "synapseADXPoolEnableAutoScale": {
            "value": "[parameters('synapseADXPoolEnableAutoScale')]"
          },
          "synapseSqlAdminPassword": {
            "value": "[parameters('synapseSqlAdminPassword')]"
          },
          "synapseSqlAdminUserName": {
            "value": "[parameters('synapseSqlAdminUserName')]"
          },
          "synapseSQLPoolSKU": {
            "value": "[parameters('synapseSQLPoolSKU')]"
          },
          "synapseWorkspaceName": {
            "value": "[parameters('synapseWorkspaceName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.8.9.13224",
              "templateHash": "18308825801895034742"
            }
          },
          "parameters": {
            "networkIsolationMode": {
              "type": "string"
            },
            "resourceLocation": {
              "type": "string"
            },
            "ctrlDeploySynapseSQLPool": {
              "type": "bool"
            },
            "ctrlDeploySynapseSparkPool": {
              "type": "bool"
            },
            "ctrlDeploySynapseADXPool": {
              "type": "bool"
            },
            "workspaceDataLakeAccountName": {
              "type": "string"
            },
            "dataLakeSandpitZoneName": {
              "type": "string"
            },
            "synapseDefaultContainerName": {
              "type": "string"
            },
            "synapseWorkspaceName": {
              "type": "string"
            },
            "synapseSqlAdminUserName": {
              "type": "string"
            },
            "synapseSqlAdminPassword": {
              "type": "string"
            },
            "synapseManagedRGName": {
              "type": "string"
            },
            "synapseDedicatedSQLPoolName": {
              "type": "string"
            },
            "synapseSQLPoolSKU": {
              "type": "string"
            },
            "synapseSparkPoolName": {
              "type": "string"
            },
            "synapseSparkPoolNodeSize": {
              "type": "string"
            },
            "synapseSparkPoolMinNodeCount": {
              "type": "int"
            },
            "synapseSparkPoolMaxNodeCount": {
              "type": "int"
            },
            "synapseADXPoolName": {
              "type": "string"
            },
            "synapseADXDatabaseName": {
              "type": "string"
            },
            "synapseADXPoolEnableAutoScale": {
              "type": "bool"
            },
            "synapseADXPoolMinSize": {
              "type": "int"
            },
            "synapseADXPoolMaxSize": {
              "type": "int"
            },
            "purviewAccountID": {
              "type": "string"
            }
          },
          "variables": {
            "storageEnvironmentDNS": "[environment().suffixes.storage]",
            "dataLakeStorageAccountUrl": "[format('https://{0}.dfs.{1}', parameters('workspaceDataLakeAccountName'), variables('storageEnvironmentDNS'))]",
            "azureRBACStorageBlobDataContributorRoleID": "ba92f5b4-2d11-453d-a403-e96b0029c9fe",
            "privateContainerNames": [
              "[parameters('dataLakeSandpitZoneName')]",
              "[parameters('synapseDefaultContainerName')]"
            ]
          },
          "resources": [
            {
              "condition": "[equals(parameters('ctrlDeploySynapseADXPool'), true())]",
              "type": "Microsoft.Synapse/workspaces/kustoPools/databases",
              "apiVersion": "2021-06-01-preview",
              "name": "[format('{0}/{1}/{2}', parameters('synapseWorkspaceName'), parameters('synapseADXPoolName'), parameters('synapseADXDatabaseName'))]",
              "kind": "ReadWrite",
              "location": "[parameters('resourceLocation')]",
              "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces/kustoPools', parameters('synapseWorkspaceName'), parameters('synapseADXPoolName'))]"
              ]
            },
            {
              "condition": "[equals(parameters('ctrlDeploySynapseSQLPool'), true())]",
              "type": "Microsoft.Synapse/workspaces/sqlPools",
              "apiVersion": "2021-06-01",
              "name": "[format('{0}/{1}', parameters('synapseWorkspaceName'), parameters('synapseDedicatedSQLPoolName'))]",
              "location": "[parameters('resourceLocation')]",
              "sku": {
                "name": "[parameters('synapseSQLPoolSKU')]"
              },
              "properties": {
                "createMode": "Default",
                "collation": "SQL_Latin1_General_CP1_CI_AS"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('synapseWorkspaceName'))]"
              ]
            },
            {
              "condition": "[equals(parameters('networkIsolationMode'), 'default')]",
              "type": "Microsoft.Synapse/workspaces/firewallRules",
              "apiVersion": "2021-06-01",
              "name": "[format('{0}/{1}', parameters('synapseWorkspaceName'), 'AllowAllNetworks')]",
              "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "255.255.255.255"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('synapseWorkspaceName'))]"
              ]
            },
            {
              "type": "Microsoft.Synapse/workspaces/firewallRules",
              "apiVersion": "2021-06-01",
              "name": "[format('{0}/{1}', parameters('synapseWorkspaceName'), 'AllowAllWindowsAzureIps')]",
              "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "0.0.0.0"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('synapseWorkspaceName'))]"
              ]
            },
            {
              "type": "Microsoft.Synapse/workspaces/managedIdentitySqlControlSettings",
              "apiVersion": "2021-06-01",
              "name": "[format('{0}/{1}', parameters('synapseWorkspaceName'), 'default')]",
              "properties": {
                "grantSqlControlToManagedIdentity": {
                  "desiredState": "Enabled"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('synapseWorkspaceName'))]"
              ]
            },
            {
              "condition": "[equals(parameters('ctrlDeploySynapseSparkPool'), true())]",
              "type": "Microsoft.Synapse/workspaces/bigDataPools",
              "apiVersion": "2021-06-01",
              "name": "[format('{0}/{1}', parameters('synapseWorkspaceName'), parameters('synapseSparkPoolName'))]",
              "location": "[parameters('resourceLocation')]",
              "properties": {
                "autoPause": {
                  "enabled": true,
                  "delayInMinutes": 15
                },
                "nodeSize": "[parameters('synapseSparkPoolNodeSize')]",
                "nodeSizeFamily": "MemoryOptimized",
                "sparkVersion": "2.4",
                "autoScale": {
                  "enabled": true,
                  "minNodeCount": "[parameters('synapseSparkPoolMinNodeCount')]",
                  "maxNodeCount": "[parameters('synapseSparkPoolMaxNodeCount')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('synapseWorkspaceName'))]"
              ]
            },
            {
              "condition": "[equals(parameters('ctrlDeploySynapseADXPool'), true())]",
              "type": "Microsoft.Synapse/workspaces/kustoPools",
              "apiVersion": "2021-06-01-preview",
              "name": "[format('{0}/{1}', parameters('synapseWorkspaceName'), parameters('synapseADXPoolName'))]",
              "location": "[parameters('resourceLocation')]",
              "sku": {
                "capacity": 2,
                "name": "Compute optimized",
                "size": "Extra small"
              },
              "properties": {
                "enablePurge": false,
                "workspaceUID": "[reference(resourceId('Microsoft.Synapse/workspaces', parameters('synapseWorkspaceName'))).workspaceUID]",
                "enableStreamingIngest": false,
                "optimizedAutoscale": {
                  "isEnabled": "[parameters('synapseADXPoolEnableAutoScale')]",
                  "maximum": "[parameters('synapseADXPoolMaxSize')]",
                  "minimum": "[parameters('synapseADXPoolMinSize')]",
                  "version": 1
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('synapseWorkspaceName'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2021-02-01",
              "name": "[parameters('workspaceDataLakeAccountName')]",
              "location": "[parameters('resourceLocation')]",
              "properties": {
                "isHnsEnabled": true,
                "accessTier": "Hot",
                "networkAcls": {
                  "defaultAction": "[if(equals(parameters('networkIsolationMode'), 'vNet'), 'Deny', 'Allow')]",
                  "bypass": "None",
                  "resourceAccessRules": [
                    {
                      "tenantId": "[subscription().tenantId]",
                      "resourceId": "[resourceId('Microsoft.Synapse/workspaces', parameters('synapseWorkspaceName'))]"
                    }
                  ]
                }
              },
              "kind": "StorageV2",
              "sku": {
                "name": "Standard_LRS"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('synapseWorkspaceName'))]"
              ]
            },
            {
              "copy": {
                "name": "r_dataLakePrivateContainer",
                "count": "[length(variables('privateContainerNames'))]"
              },
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2021-02-01",
              "name": "[format('{0}/default/{1}', parameters('workspaceDataLakeAccountName'), variables('privateContainerNames')[copyIndex()])]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('workspaceDataLakeAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Synapse/workspaces",
              "apiVersion": "2021-06-01",
              "name": "[parameters('synapseWorkspaceName')]",
              "location": "[parameters('resourceLocation')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "defaultDataLakeStorage": {
                  "accountUrl": "[variables('dataLakeStorageAccountUrl')]",
                  "filesystem": "[parameters('synapseDefaultContainerName')]"
                },
                "sqlAdministratorLogin": "[parameters('synapseSqlAdminUserName')]",
                "sqlAdministratorLoginPassword": "[parameters('synapseSqlAdminPassword')]",
                "managedResourceGroupName": "[parameters('synapseManagedRGName')]",
                "managedVirtualNetwork": "[if(equals(parameters('networkIsolationMode'), 'vNet'), 'default', '')]",
                "managedVirtualNetworkSettings": "[if(equals(parameters('networkIsolationMode'), 'vNet'), createObject('preventDataExfiltration', true()), null())]"

              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-08-01-preview",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('workspaceDataLakeAccountName'))]",
              "name": "[guid(parameters('synapseWorkspaceName'), parameters('workspaceDataLakeAccountName'))]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('azureRBACStorageBlobDataContributorRoleID'))]",
                "principalId": "[reference(resourceId('Microsoft.Synapse/workspaces', parameters('synapseWorkspaceName')), '2021-06-01', 'full').identity.principalId]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('synapseWorkspaceName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('workspaceDataLakeAccountName'))]"
              ]
            }
          ],
          "outputs": {
            "workspaceDataLakeAccountID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('workspaceDataLakeAccountName'))]"
            },
            "workspaceDataLakeAccountName": {
              "type": "string",
              "value": "[parameters('workspaceDataLakeAccountName')]"
            },
            "synapseWorkspaceID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Synapse/workspaces', parameters('synapseWorkspaceName'))]"
            },
            "synapseWorkspaceName": {
              "type": "string",
              "value": "[parameters('synapseWorkspaceName')]"
            },
            "synapseSQLDedicatedEndpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Synapse/workspaces', parameters('synapseWorkspaceName'))).connectivityEndpoints.sql]"
            },
            "synapseSQLServerlessEndpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Synapse/workspaces', parameters('synapseWorkspaceName'))).connectivityEndpoints.sqlOnDemand]"
            },
            "synapseWorkspaceSparkID": {
              "type": "string",
              "value": "[if(parameters('ctrlDeploySynapseSparkPool'), resourceId('Microsoft.Synapse/workspaces/bigDataPools', parameters('synapseWorkspaceName'), parameters('synapseSparkPoolName')), '')]"
            },
            "synapseWorkspaceSparkName": {
              "type": "string",
              "value": "[if(parameters('ctrlDeploySynapseSparkPool'), parameters('synapseSparkPoolName'), '')]"
            },
            "synapseWorkspaceIdentityPrincipalID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Synapse/workspaces', parameters('synapseWorkspaceName')), '2021-06-01', 'full').identity.principalId]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'PurviewDeploy')]"
      ]
    },   
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "PostDeploymentScript",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "cleanUpPSScriptLocation": {
            "value": "[variables('cleanUpPSScriptLocation')]"
          },
          "cleanUpScriptArguments": {
            "value": "[variables('cleanUpScriptArguments')]"
          },
          "ctrlDeployPurview": {
            "value": "[parameters('ctrlDeployPurview')]"
          },
          "deploymentDatetime": {
            "value": "[parameters('deploymentDatetime')]"
          },
          "purviewPSScriptLocation": {
            "value": "[variables('purviewPSScriptLocation')]"
          },
          "resourceLocation": {
            "value": "[parameters('resourceLocation')]"
          },
          "synapsePSScriptLocation": {
            "value": "[variables('synapsePSScriptLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.8.9.13224",
              "templateHash": "5420510849331936377"
            }
          },
          "parameters": {
            "deploymentDatetime": {
              "type": "string"
            },
            "resourceLocation": {
              "type": "string"
            },
            "ctrlDeployPurview": {
              "type": "bool"
            },
            "deploymentScriptUAMIId": {
              "type": "string"
            },
            "synapseScriptArguments": {
              "type": "string"
            },
            "synapsePSScriptLocation": {
              "type": "string"
            },
            "purviewScriptArguments": {
              "type": "string"
            },
            "purviewPSScriptLocation": {
              "type": "string"
            },
            "cleanUpScriptArguments": {
              "type": "string"
            },
            "cleanUpPSScriptLocation": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deploymentScripts",
              "apiVersion": "2020-10-01",
              "name": "[format('SynapsePostDeploymentScript-{0}', parameters('deploymentDatetime'))]",
              "location": "[parameters('resourceLocation')]",
              "kind": "AzurePowerShell",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('deploymentScriptUAMIId'))]": {}
                }
              },
              "properties": {
                "azPowerShellVersion": "7.2.4",
                "cleanupPreference": "OnSuccess",
                "retentionInterval": "P1D",
                "timeout": "PT30M",
                "arguments": "[parameters('synapseScriptArguments')]",
                "primaryScriptUri": "[base64ToString(parameters('synapsePSScriptLocation'))]"
              }
            },
            {
              "condition": "[equals(parameters('ctrlDeployPurview'), true())]",
              "type": "Microsoft.Resources/deploymentScripts",
              "apiVersion": "2020-10-01",
              "name": "[format('PurviewPostDeploymentScript-{0}', parameters('deploymentDatetime'))]",
              "location": "[parameters('resourceLocation')]",
              "kind": "AzurePowerShell",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('deploymentScriptUAMIId'))]": {}
                }
              },
              "properties": {
                "azPowerShellVersion": "7.2.4",
                "cleanupPreference": "OnSuccess",
                "retentionInterval": "P1D",
                "timeout": "PT30M",
                "arguments": "[parameters('purviewScriptArguments')]",
                "primaryScriptUri": "[base64ToString(parameters('purviewPSScriptLocation'))]"
              }
            },
            {
              "type": "Microsoft.Resources/deploymentScripts",
              "apiVersion": "2020-10-01",
              "name": "[format('CleanUpPostDeploymentScript-{0}', parameters('deploymentDatetime'))]",
              "location": "[parameters('resourceLocation')]",
              "kind": "AzurePowerShell",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('deploymentScriptUAMIId'))]": {}
                }
              },
              "properties": {
                "azPowerShellVersion": "7.2.4",
                "cleanupPreference": "OnSuccess",
                "retentionInterval": "P1D",
                "timeout": "PT30M",
                "arguments": "[parameters('cleanUpScriptArguments')]",
                "primaryScriptUri": "[base64ToString(parameters('cleanUpPSScriptLocation'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deploymentScripts', format('PurviewPostDeploymentScript-{0}', parameters('deploymentDatetime')))]",
                "[resourceId('Microsoft.Resources/deploymentScripts', format('SynapsePostDeploymentScript-{0}', parameters('deploymentDatetime')))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        
        "[resourceId('Microsoft.Resources/deployments', 'SynapseDeploy')]"

      ]
    }
  ]
}